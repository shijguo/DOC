						WIFI配网操作流程

static esp_err_t event_handler(void *ctx, system_event_t *event)		//回调事件
{
    switch (event->event_id) {
    case SYSTEM_EVENT_STA_START:
        esp_wifi_connect();
        ESP_LOGI(TAG, "SYSTEM_EVENT_STA_START");
        break;
    case SYSTEM_EVENT_STA_CONNECTED:
#ifdef CONFIG_EXAMPLE_IPV6
        /* enable ipv6 */
        tcpip_adapter_create_ip6_linklocal(TCPIP_ADAPTER_IF_STA);		//sta模式开始
#endif
        break;
    case SYSTEM_EVENT_STA_GOT_IP:						//从连接的AP获得IP
        xEventGroupSetBits(wifi_event_group, IPV4_GOTIP_BIT);
        ESP_LOGI(TAG, "SYSTEM_EVENT_STA_GOT_IP");
        break;
    case SYSTEM_EVENT_STA_DISCONNECTED:						//断开连接
        /* This is a workaround as ESP32 WiFi libs don't currently auto-reassociate. */
        esp_wifi_connect();
        xEventGroupClearBits(wifi_event_group, IPV4_GOTIP_BIT);
#ifdef CONFIG_EXAMPLE_IPV6
        xEventGroupClearBits(wifi_event_group, IPV6_GOTIP_BIT);
#endif
        break;
    case SYSTEM_EVENT_AP_STA_GOT_IP6:
#ifdef CONFIG_EXAMPLE_IPV6
        xEventGroupSetBits(wifi_event_group, IPV6_GOTIP_BIT);
        ESP_LOGI(TAG, "SYSTEM_EVENT_STA_GOT_IP6");

        char *ip6 = ip6addr_ntoa(&event->event_info.got_ip6.ip6_info.ip);
        ESP_LOGI(TAG, "IPv6: %s", ip6);
#endif
    default:
        break;
    }
    return ESP_OK;
}



void initialise_wifi(void)
{
	tcpip_adapter_init();							//初始化tcp/ip适配器
    wifi_event_group = xEventGroupCreate();					//创建事件组
    ESP_ERROR_CHECK( esp_event_loop_init(event_handler, NULL) );		//WIFI回调事件
    wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT();			//WIFI默认配置
    ESP_ERROR_CHECK( esp_wifi_init(&cfg) );					//按WIFI默认配置初始化
    ESP_ERROR_CHECK( esp_wifi_set_storage(WIFI_STORAGE_RAM) );			//WIFI参数存储类型
    wifi_config_t wifi_config = {	
        .sta = {
            .ssid = EXAMPLE_WIFI_SSID,						//WIFI SSID
            .password = EXAMPLE_WIFI_PASS,					//WIDI Password
        },
    };
    ESP_LOGI(TAG, "Setting WiFi configuration SSID %s...", wifi_config.sta.ssid);
    ESP_ERROR_CHECK( esp_wifi_set_mode(WIFI_MODE_STA) );			//设置WIFI模式 sta/ap
    ESP_ERROR_CHECK( esp_wifi_set_config(ESP_IF_WIFI_STA, &wifi_config) );	//按以上配置设置
    ESP_ERROR_CHECK( esp_wifi_start() );					//启动WIFI


}



static void wait_for_ip()
{
#ifdef CONFIG_EXAMPLE_IPV6
    uint32_t bits = IPV4_GOTIP_BIT | IPV6_GOTIP_BIT;
#else
    uint32_t bits = IPV4_GOTIP_BIT;
#endif

    ESP_LOGI(TAG, "Waiting for AP connection...");
    xEventGroupWaitBits(wifi_event_group, bits, false, true, portMAX_DELAY);		//根据WIFI事件组来等待连接
    ESP_LOGI(TAG, "Connected to AP");
}


